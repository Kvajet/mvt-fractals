var g=Object.defineProperty;var x=(r,t,n)=>t in r?g(r,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[t]=n;var o=(r,t,n)=>(x(r,typeof t!="symbol"?t+"":t,n),n);const b=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))i(s);new MutationObserver(s=>{for(const e of s)if(e.type==="childList")for(const a of e.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&i(a)}).observe(document,{childList:!0,subtree:!0});function n(s){const e={};return s.integrity&&(e.integrity=s.integrity),s.referrerpolicy&&(e.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?e.credentials="include":s.crossorigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function i(s){if(s.ep)return;s.ep=!0;const e=n(s);fetch(s.href,e)}};b();const C=[{name:"blue",func:I},{name:"gray",func:w},{name:"pink",func:S},{name:"sun",func:E}];function I(r){return[0,0,r*50]}function w(r){return[r*10,r*10,r*10]}function S(r){return[255*Math.sin(r/15),r*5,255*Math.sin(r/10)]}function E(r){return[253*(r/255)*10,184*(r/255)*10,19*(r/255)*10]}class v{constructor(t){o(this,"m_ctx");o(this,"m_colors",C);o(this,"m_currentColor",this.m_colors[0]);o(this,"m_lastFractalFunction",()=>0);o(this,"m_interactive",document.createElement("div"));this.m_ctx=t}CanvasDimensions(){return[this.m_ctx.canvas.width,this.m_ctx.canvas.height]}RepaintCanvas(t){this.m_ctx.fillStyle=`rgba(${t[0]}, ${t[1]}, ${t[2]}, 1)`;const[n,i]=this.CanvasDimensions();this.m_ctx.fillRect(0,0,n,i)}Draw(t,n=this.m_currentColor.func){const[i,s]=this.CanvasDimensions();this.m_lastFractalFunction=t,this.RepaintCanvas([0,0,0]);for(let e=0;e<s;e++)for(let a=0;a<i;a++){const l=t(a,e);this.SetPixel(a,e,n(l))}}DrawPart(t,n,i,s){for(let e=i;e<s;e++)for(let a=t;a<n;a++){const l=this.m_lastFractalFunction(a,e);this.SetPixel(a,e,this.m_currentColor.func(l))}}ExperimentalDraw(t,n=this.m_currentColor.func){const[i,s]=this.CanvasDimensions();this.m_lastFractalFunction=t,this.RepaintCanvas([0,0,0]);for(let e=0;e<s;e++){let a=-1,l=0,m=0;for(let c=0;c<i;c++){const f=t(c,e);if(a===f)m++;else{if(l!==m){const _=n(a);this.m_ctx.fillStyle=`rgba(${_[0]},${_[1]},${_[2]},1)`,this.m_ctx.fillRect(l,e,m-l+1,1)}a=f,l=m=c;const d=n(a);this.m_ctx.fillStyle=`rgba(${d[0]},${d[1]},${d[2]},1)`,this.m_ctx.fillRect(l,e,1,1)}}if(l!==m){const c=n(a);this.m_ctx.fillStyle=`rgba(${c[0]},${c[1]},${c[2]},1)`,this.m_ctx.fillRect(l,e,m-l+1,1)}}}SetPixel(t,n,i){this.m_ctx.fillStyle=`rgba(${i[0]},${i[1]},${i[2]},1)`,this.m_ctx.fillRect(t,n,1,1)}ColorChangeHandler(t){const n=t;this.m_currentColor=this.m_colors[n.target.selectedIndex],this.Draw(this.m_lastFractalFunction)}MapColors(t){const n=(s,e)=>{const a=document.createElement("option");return a.value=e,a.innerHTML=s,a};let i=0;for(const s of this.m_colors){const e=n(s.name,i.toString());t.appendChild(e),i++}t.addEventListener("change",this.ColorChangeHandler.bind(this))}MakeInteractive(){}Interactive(){return this.m_interactive}}const D={type:"article",content:[{type:"h1",html:"Mandelbrot"},{type:"article",content:[{type:"h3",html:"Filters"},{type:"select",html:"innerHTML",attributes:{id:"mandelbrot-color-select"}}],attributes:{classNames:["filters"]}},{type:"article",content:[{type:"h3",html:"Sliders"},{type:"dl",content:[{type:"dt",html:"Iterations"},{type:"dd",content:[{type:"input",attributes:{id:"mandelbrot-iteration-slider",type:"range",min:"1",max:"1000",step:"1",value:"1"}},{type:"input",attributes:{id:"mandelbrot-iteration-numberinput",type:"number",value:"0",classNames:["number-input"]}}]}]}],attributes:{classNames:["sliders"]}}]},$={type:"article",content:[{type:"h1",html:"Julia"},{type:"article",content:[{type:"h3",html:"Filters"},{type:"select",html:"innerHTML",attributes:{id:"julia-color-select"}}],attributes:{classNames:["filters"]}},{type:"article",content:[{type:"h3",html:"Sliders"},{type:"dl",content:[{type:"dt",html:"Iterations"},{type:"dd",content:[{type:"input",attributes:{id:"julia-iteration-slider",type:"range",min:"1",max:"1000",step:"1",value:"1"}},{type:"input",attributes:{id:"julia-iteration-numberinput",type:"number",value:"0",classNames:["number-input"]}}]},{type:"dt",html:"Real Part"},{type:"dd",content:[{type:"input",attributes:{id:"julia-slider-real",type:"range",min:"-2",max:"2",step:"0.01",value:"0"}},{type:"input",attributes:{id:"julia-numberinput-real",type:"number",value:"0",classNames:["number-input"]}}]},{type:"dt",html:"Imaginary Part"},{type:"dd",content:[{type:"input",attributes:{id:"julia-slider-imaginary",type:"range",min:"-2",max:"2",step:"0.01",value:"0"}},{type:"input",attributes:{id:"julia-numberinput-imaginary",type:"number",value:"0",classNames:["number-input"]}}]}]}],attributes:{classNames:["sliders"]}}],attributes:{id:"julia-side-bar"}},M={type:"article",content:[{type:"h1",html:"Sierpinski"},{type:"article",content:[{type:"article",content:[{type:"h3",html:"Types"},{type:"select",html:"innerHTML",attributes:{id:"sierpinski-type-select"}}],attributes:{classNames:["filters"]}},{type:"article",content:[{type:"h3",html:"Sliders"},{type:"dl",content:[{type:"dt",html:"Iterations"},{type:"dd",content:[{type:"input",attributes:{id:"sierpinski-iteration-slider",type:"range",min:"1",max:"12",step:"1",value:"1"}},{type:"input",attributes:{id:"sierpinski-iteration-numberinput",type:"number",value:"1",classNames:["number-input"]}}]}]}],attributes:{classNames:["sliders"]}}]}]};class k extends v{constructor(t){super(t);o(this,"m_maxIter");o(this,"m_min");o(this,"m_max");const[n,i]=this.CanvasDimensions();this.m_maxIter=500,this.m_min=[-2,-1.5],this.m_max=[1,this.m_min[1]+(1-this.m_min[0])*i/n],this.MakeInteractive()}TransformX(t){return this.m_min[0]+t*(this.m_max[0]-this.m_min[0])/this.CanvasDimensions()[0]}TransformY(t){return this.m_min[1]+t*(this.m_max[1]-this.m_min[1])/this.CanvasDimensions()[1]}MandelFunc(t,n){t=this.TransformX(t),n=this.TransformY(n);let i=t,s=n,e=0,a=0,l=0,m=0;for(;l<this.m_maxIter&&(m=e*e-a*a,a=2*e*a+s,e=m+i,!(e*e+a*a>4));)l++;return l==this.m_maxIter&&(l=0),l}AssignIterationInputs(t,n){t.value=`${this.m_maxIter}`,n.value=`${this.m_maxIter}`,t.addEventListener("input",i=>{this.m_maxIter=+i.target.value,n.value=this.m_maxIter.toString(),this.Draw()}),n.addEventListener("blur",i=>{const s=+i.target.value;s!==this.m_maxIter&&(t.value=`${s}`,this.m_maxIter=s,this.Draw())})}Draw(){super.ExperimentalDraw(this.MandelFunc.bind(this))}MakeInteractive(){this.m_interactive=p(D);const t=this.m_interactive.getElementsByClassName("mandelbrot-color-select")[0],n=this.m_interactive.getElementsByClassName("mandelbrot-iteration-slider")[0],i=this.m_interactive.getElementsByClassName("mandelbrot-iteration-numberinput")[0];this.AssignIterationInputs(n,i),this.MapColors(t)}}class N extends v{constructor(t,n=[.1,.38]){super(t);o(this,"m_maxIter");o(this,"m_min");o(this,"m_max");o(this,"m_parameter");const[i,s]=this.CanvasDimensions();this.m_maxIter=150,this.m_min=[-2,-1.5],this.m_max=[1,this.m_min[1]+(1-this.m_min[0])*s/i],this.m_parameter=n,this.MakeInteractive()}TransformX(t){return this.m_min[0]+t*(this.m_max[0]-this.m_min[0])/this.CanvasDimensions()[0]}TransformY(t){return this.m_min[1]+t*(this.m_max[1]-this.m_min[1])/this.CanvasDimensions()[1]}JuliaFunc(t,n){t+=this.CanvasDimensions()[0]/5.9,t=this.TransformX(t),n=this.TransformY(n);let i=t,s=n,e=0,a=0;for(;e<this.m_maxIter&&(a=i*i-s*s,s=2*i*s+this.m_parameter[1],i=a+this.m_parameter[0],!(i*i+s*s>4));)e++;return e==this.m_maxIter&&(e=0),e}AssignSliders(t,n,i,s){i.value=`${h(this.m_parameter[0])}`,s.value=`${h(this.m_parameter[1])}`,t.addEventListener("input",e=>{this.m_parameter[0]=+e.target.value,i.value=`${h(this.m_parameter[0])}`,this.Draw()}),n.addEventListener("input",e=>{this.m_parameter[1]=+e.target.value,s.value=`${h(this.m_parameter[1])}`,this.Draw()})}AssignParameterInputs(t,n,i,s){const e=l=>{const m=+l.target.value;m!==this.m_parameter[0]&&(i.value=`${m}`,this.m_parameter[0]=m,this.Draw())};t.addEventListener("blur",e);const a=l=>{const m=+l.target.value;m!==this.m_parameter[1]&&(s.value=`${m}`,this.m_parameter[1]=m,this.Draw())};n.addEventListener("blur",a)}AssignIterationInputs(t,n){t.value=`${this.m_maxIter}`,n.value=`${this.m_maxIter}`,t.addEventListener("input",i=>{this.m_maxIter=+i.target.value,n.value=this.m_maxIter.toString(),this.Draw()}),n.addEventListener("blur",i=>{const s=+i.target.value;s!==this.m_maxIter&&(t.value=`${s}`,this.m_maxIter=s,this.Draw())})}Draw(){super.ExperimentalDraw(this.JuliaFunc.bind(this))}ChangeParameter(t){this.m_parameter=t}CurrentParameter(){return this.m_parameter}MakeInteractive(){this.m_interactive=p($);const t=this.m_interactive.getElementsByClassName("julia-slider-real")[0],n=this.m_interactive.getElementsByClassName("julia-slider-imaginary")[0],i=this.m_interactive.getElementsByClassName("julia-numberinput-real")[0],s=this.m_interactive.getElementsByClassName("julia-numberinput-imaginary")[0],e=this.m_interactive.getElementsByClassName("julia-color-select")[0],a=this.m_interactive.getElementsByClassName("julia-iteration-slider")[0],l=this.m_interactive.getElementsByClassName("julia-iteration-numberinput")[0];this.AssignSliders(t,n,i,s),this.AssignParameterInputs(i,s,t,n),this.AssignIterationInputs(a,l),this.MapColors(e)}}var u;(function(r){r[r.Mandelbrot=0]="Mandelbrot",r[r.Julia=1]="Julia",r[r.Sierpinski=2]="Sierpinski"})(u||(u={}));class L extends v{constructor(t){super(t);o(this,"m_maxIter",1);o(this,"m_drawingFunc",this.DrawTriangle);o(this,"m_types",[{name:"Triangle",func:this.DrawTriangle},{name:"Square",func:this.DrawSquare}]);this.MakeInteractive()}DrawTriangle(t){this.m_ctx.beginPath(),this.m_ctx.moveTo(t[0][0]+(t[1][0]-t[0][0])/2,t[0][1]),this.m_ctx.lineTo(t[0][0],t[1][1]),this.m_ctx.lineTo(t[1][0],t[1][1]),this.m_ctx.fill()}DrawSquare(t){this.m_ctx.fillRect(t[0][0],t[0][1],t[1][0]-t[0][0],t[1][1]-t[0][1])}SierpinskiFunc(t,n){if(n===1){this.m_ctx.fillStyle="#FFFFFF",this.m_drawingFunc(t);return}const i=t[0],e=(t[1][0]-i[0])*.25;this.SierpinskiFunc([[i[0]+e,i[1]],[i[0]+e*3,i[1]+e*2]],n-1),this.SierpinskiFunc([[i[0],i[1]+e*2],[i[0]+e*2,i[1]+e*4]],n-1),this.SierpinskiFunc([[i[0]+e*2,i[1]+e*2],[i[0]+e*4,i[1]+e*4]],n-1)}Draw(){this.m_ctx.clearRect(0,0,this.m_ctx.canvas.width,this.m_ctx.canvas.height),this.SierpinskiFunc([[0,0],[this.m_ctx.canvas.width,this.m_ctx.canvas.height]],this.m_maxIter)}TypeChangeHandler(t){const n=t;this.m_drawingFunc=this.m_types[n.target.selectedIndex].func,this.Draw()}MapTypes(t){const n=(s,e)=>{const a=document.createElement("option");return a.value=e,a.innerHTML=s,a};let i=0;for(const s of this.m_types){const e=n(s.name,i.toString());t.appendChild(e),i++}t.addEventListener("change",this.TypeChangeHandler.bind(this))}AssignIterationInputs(t,n){t.value=`${this.m_maxIter}`,n.value=`${this.m_maxIter}`,t.addEventListener("input",i=>{this.m_maxIter=+i.target.value,n.value=this.m_maxIter.toString(),this.Draw()}),n.addEventListener("blur",i=>{const s=+i.target.value;s!==this.m_maxIter&&(t.value=`${s}`,this.m_maxIter=s,this.Draw())})}MakeInteractive(){this.m_interactive=p(M);const t=this.m_interactive.getElementsByClassName("sierpinski-type-select")[0],n=this.m_interactive.getElementsByClassName("sierpinski-iteration-slider")[0],i=this.m_interactive.getElementsByClassName("sierpinski-iteration-numberinput")[0];this.AssignIterationInputs(n,i),this.MapTypes(t)}}function y(r){const t=document.getElementById(r);if(t==null)throw new Error(`Unable to find canvas with id: ${r}.`);return t.getContext("2d")}function T(r,t){switch(r){case u.Mandelbrot:{const n=y(t);return new k(n)}case u.Julia:{const n=y(t);return new N(n)}case u.Sierpinski:{const n=y(t);return new L(n)}default:throw new Error("Invalid fractal type given.")}}function h(r){return Math.floor(r*100)/100}function p(r){const t=r.content,n=r.type,i=document.createElement(n),s=r.attributes;if(s!=null)for(const e in s){if(e==="classNames"){i.classList.add(...s[e]);continue}e==="id"&&i.classList.add(s[e]),i.setAttribute(e,s[e])}if(t==null){const e=r.html;return e!=null&&(i.innerHTML=e),i}for(const e of t){const a=p(e);i.appendChild(a)}return i}export{u as F,T as i,h as t};
