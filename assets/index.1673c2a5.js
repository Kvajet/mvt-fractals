var b=Object.defineProperty;var x=(r,t,n)=>t in r?b(r,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[t]=n;var o=(r,t,n)=>(x(r,typeof t!="symbol"?t+"":t,n),n);const C=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const e of i)if(e.type==="childList")for(const a of e.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function n(i){const e={};return i.integrity&&(e.integrity=i.integrity),i.referrerpolicy&&(e.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?e.credentials="include":i.crossorigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function s(i){if(i.ep)return;i.ep=!0;const e=n(i);fetch(i.href,e)}};C();const w=[{name:"blue",func:I},{name:"gray",func:E},{name:"pink",func:D}];function I(r){return[0,0,r*50]}function E(r){return[r*10,r*10,r*10]}function D(r){return[255*Math.sin(r/15),r*5,255*Math.sin(r/10)]}class v{constructor(t){o(this,"m_ctx");o(this,"m_colors",w);o(this,"m_currentColor",this.m_colors[0]);o(this,"m_lastFractalFunction",()=>0);o(this,"m_interactive",document.createElement("div"));this.m_ctx=t}CanvasDimensions(){return[this.m_ctx.canvas.width,this.m_ctx.canvas.height]}RepaintCanvas(t){this.m_ctx.fillStyle=`rgba(${t[0]}, ${t[1]}, ${t[2]}, 1)`;const[n,s]=this.CanvasDimensions();this.m_ctx.fillRect(0,0,n,s)}Draw(t,n=this.m_currentColor.func){const[s,i]=this.CanvasDimensions();this.m_lastFractalFunction=t,this.RepaintCanvas([0,0,0]);for(let e=0;e<i;e++)for(let a=0;a<s;a++){const l=t(a,e);this.SetPixel(a,e,n(l))}}DrawPart(t,n,s,i){for(let e=s;e<i;e++)for(let a=t;a<n;a++){const l=this.m_lastFractalFunction(a,e);this.SetPixel(a,e,this.m_currentColor.func(l))}}ExperimentalDraw(t,n=this.m_currentColor.func){const[s,i]=this.CanvasDimensions();this.m_lastFractalFunction=t,this.RepaintCanvas([0,0,0]);for(let e=0;e<i;e++){let a=-1,l=0,m=0;for(let c=0;c<s;c++){const f=t(c,e);if(a===f)m++;else{if(l!==m){const p=n(a);this.m_ctx.fillStyle=`rgba(${p[0]},${p[1]},${p[2]},1)`,this.m_ctx.fillRect(l,e,m-l+1,1)}a=f,l=m=c;const d=n(a);this.m_ctx.fillStyle=`rgba(${d[0]},${d[1]},${d[2]},1)`,this.m_ctx.fillRect(l,e,1,1)}}if(l!==m){const c=n(a);this.m_ctx.fillStyle=`rgba(${c[0]},${c[1]},${c[2]},1)`,this.m_ctx.fillRect(l,e,m-l+1,1)}}}SetPixel(t,n,s){this.m_ctx.fillStyle=`rgba(${s[0]},${s[1]},${s[2]},1)`,this.m_ctx.fillRect(t,n,1,1)}ColorChangeHandler(t){const n=t;this.m_currentColor=this.m_colors[n.target.selectedIndex],this.Draw(this.m_lastFractalFunction)}MapColors(t){const n=(i,e)=>{const a=document.createElement("option");return a.value=e,a.innerHTML=i,a};let s=0;for(const i of this.m_colors){const e=n(i.name,s.toString());t.appendChild(e),s++}t.addEventListener("change",this.ColorChangeHandler.bind(this))}MakeInteractive(){}Interactive(){return this.m_interactive}static STransformX(t,n,s,i){return s[0]+t*(i[0]-s[0])/n}static STransformY(t,n,s,i){return s[1]+t*(i[1]-s[1])/n}}const $={type:"article",content:[{type:"h1",html:"Mandelbrot"},{type:"article",content:[{type:"h3",html:"Filters"},{type:"select",html:"innerHTML",attributes:{id:"mandelbrot-color-select"}}],attributes:{classNames:["filters"]}}]},M={type:"article",content:[{type:"h1",html:"Julia"},{type:"article",content:[{type:"h3",html:"Filters"},{type:"select",html:"innerHTML",attributes:{id:"julia-color-select"}}],attributes:{classNames:["filters"]}},{type:"article",content:[{type:"h3",html:"Sliders"},{type:"dl",content:[{type:"dt",html:"Iterations"},{type:"dd",content:[{type:"input",attributes:{id:"julia-iteration-slider",type:"range",min:"1",max:"1000",step:"1",value:"1"}},{type:"input",attributes:{id:"julia-iteration-numberinput",type:"number",value:"0",classNames:["number-input"]}}]},{type:"dt",html:"Real Part"},{type:"dd",content:[{type:"input",attributes:{id:"julia-slider-real",type:"range",min:"-2",max:"2",step:"0.01",value:"0"}},{type:"input",attributes:{id:"julia-numberinput-real",type:"number",value:"0",classNames:["number-input"]}}]},{type:"dt",html:"Imaginary Part"},{type:"dd",content:[{type:"input",attributes:{id:"julia-slider-imaginary",type:"range",min:"-2",max:"2",step:"0.01",value:"0"}},{type:"input",attributes:{id:"julia-numberinput-imaginary",type:"number",value:"0",classNames:["number-input"]}}]}]}],attributes:{classNames:["sliders"]}}],attributes:{id:"julia-side-bar"}};class j extends v{constructor(t){super(t);o(this,"m_maxIter");o(this,"m_min");o(this,"m_max");const[n,s]=this.CanvasDimensions();this.m_maxIter=150,this.m_min=[-2,-1.5],this.m_max=[1,this.m_min[1]+(1-this.m_min[0])*s/n],this.MakeInteractive()}TransformX(t){return this.m_min[0]+t*(this.m_max[0]-this.m_min[0])/this.CanvasDimensions()[0]}TransformY(t){return this.m_min[1]+t*(this.m_max[1]-this.m_min[1])/this.CanvasDimensions()[1]}MandelFunc(t,n){t=this.TransformX(t),n=this.TransformY(n);let s=t,i=n,e=0,a=0,l=0,m=0;for(;l<this.m_maxIter&&(m=e*e-a*a,a=2*e*a+i,e=m+s,!(e*e+a*a>4));)l++;return l==this.m_maxIter&&(l=0),l}Draw(){super.ExperimentalDraw(this.MandelFunc.bind(this))}MakeInteractive(){this.m_interactive=_($);const t=this.m_interactive.getElementsByClassName("mandelbrot-color-select")[0];this.MapColors(t)}}class N extends v{constructor(t,n=[.1,.38]){super(t);o(this,"m_maxIter");o(this,"m_min");o(this,"m_max");o(this,"m_parameter");const[s,i]=this.CanvasDimensions();this.m_maxIter=150,this.m_min=[-1.5,-1.5],this.m_max=[1.5,this.m_min[1]+(1.5-this.m_min[0])*i/s],this.m_parameter=n,this.MakeInteractive()}TransformX(t){return this.m_min[0]+t*(this.m_max[0]-this.m_min[0])/this.CanvasDimensions()[0]}TransformY(t){return this.m_min[1]+t*(this.m_max[1]-this.m_min[1])/this.CanvasDimensions()[1]}JuliaFunc(t,n){t=this.TransformX(t),n=this.TransformY(n);let s=t,i=n,e=0,a=0;for(;e<this.m_maxIter&&(a=s*s-i*i,i=2*s*i+this.m_parameter[1],s=a+this.m_parameter[0],!(s*s+i*i>4));)e++;return e==this.m_maxIter&&(e=0),e}AssignSliders(t,n,s,i){s.value=`${h(this.m_parameter[0])}`,i.value=`${h(this.m_parameter[1])}`,t.addEventListener("input",e=>{this.m_parameter[0]=+e.target.value,s.value=`${h(this.m_parameter[0])}`,this.Draw()}),n.addEventListener("input",e=>{this.m_parameter[1]=+e.target.value,i.value=`${h(this.m_parameter[1])}`,this.Draw()})}AssignParameterInputs(t,n,s,i){const e=l=>{const m=+l.target.value;m!==this.m_parameter[0]&&(s.value=`${m}`,this.m_parameter[0]=m,this.Draw())};t.addEventListener("blur",e);const a=l=>{const m=+l.target.value;m!==this.m_parameter[1]&&(i.value=`${m}`,this.m_parameter[1]=m,this.Draw())};n.addEventListener("blur",a)}Draw(){super.ExperimentalDraw(this.JuliaFunc.bind(this))}ChangeParameter(t){this.m_parameter=t}CurrentParameter(){return this.m_parameter}MakeInteractive(){this.m_interactive=_(M);const t=this.m_interactive.getElementsByClassName("julia-slider-real")[0],n=this.m_interactive.getElementsByClassName("julia-slider-imaginary")[0],s=this.m_interactive.getElementsByClassName("julia-numberinput-real")[0],i=this.m_interactive.getElementsByClassName("julia-numberinput-imaginary")[0],e=this.m_interactive.getElementsByClassName("julia-color-select")[0],a=this.m_interactive.getElementsByClassName("julia-iteration-slider")[0],l=this.m_interactive.getElementsByClassName("julia-iteration-numberinput")[0];a.value=`${this.m_maxIter}`,l.value=`${this.m_maxIter}`,a.addEventListener("input",m=>{this.m_maxIter=+m.target.value,l.value=this.m_maxIter,this.Draw()}),l.addEventListener("blur",m=>{const c=+m.target.value;c!==this.m_maxIter&&(a.value=`${c}`,this.m_maxIter=c,this.Draw())}),this.AssignSliders(t,n,s,i),this.AssignParameterInputs(s,i,t,n),this.MapColors(e)}}var u;(function(r){r[r.Mandelbrot=0]="Mandelbrot",r[r.Julia=1]="Julia"})(u||(u={}));function y(r){const t=document.getElementById(r);if(t==null)throw new Error(`Unable to find canvas with id: ${r}.`);return t.getContext("2d")}function S(r,t){switch(r){case u.Mandelbrot:{const n=y(t);return new j(n)}case u.Julia:{const n=y(t);return new N(n)}default:throw new Error("Invalid fractal type given.")}}function h(r){return Math.floor(r*100)/100}function _(r){const t=r.content,n=r.type,s=document.createElement(n),i=r.attributes;if(i!=null)for(const e in i){if(e==="classNames"){s.classList.add(...i[e]);continue}e==="id"&&s.classList.add(i[e]),s.setAttribute(e,i[e])}if(t==null){const e=r.html;return e!=null&&(s.innerHTML=e),s}for(const e of t){const a=_(e);s.appendChild(a)}return s}const g=S(u.Mandelbrot,"mandelbrot-canvas"),L=document.getElementById("aside-slider");L.appendChild(g.Interactive());g.Draw();
